{"version":3,"sources":["AppDark.module.css","App.module.css","add-content.svg","context/LabelContext.js","context/ThemeContext.js","components/LabelSticker.js","components/LabelStickers.js","components/StickerForm.js","App.js","index.js"],"names":["module","exports","LabelContext","createContext","LabelContextProvider","props","useState","users","setUsers","user","setUser","pass","setPass","count","setCount","currentCount","setCurrentCount","Provider","value","handleClear","e","preventDefault","handleEditPassword","id","userForEdit","find","obj","enableEditPassword","handleEditUsername","enableEditUsername","handleGenerate","usernames","i","push","username","password","handlePasswordChange","target","handleSavePassword","handleUsernameChange","handleSaveUsername","children","ThemeContext","ThemeContextProvider","isDarkMode","setIsDarkMode","useEffect","JSON","parse","localStorage","getItem","setItem","UIFromLS","darkStyles","lightStyles","LabelSticker","useContext","listItems","map","a","key","className","list","onContextMenu","console","log","name","type","style","borderBottom","width","height","display","margin","padding","textAlign","onChange","onBlur","maxLength","autoFocus","cursor","onDoubleClick","Fragment","LabelStickers","componentRef","useRef","printAreaWrapper","printArea","ref","length","flexDirection","alignSelf","src","addContent","alt","pTag","color","fontSize","lists","trigger","disabled","buttonPrint","position","visibility","opacity","top","transition","content","current","StickerForm","form","autoComplete","onSubmit","input","required","placeholder","min","max","buttonGenerate","buttonClear","onClick","App","formWrapper","justifyContent","currentUIFromLS","htmlFor","toggleUIMode","marginTop","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1c5fdb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"AppDark_App__1HvSu\",\"toggleUIMode\":\"AppDark_toggleUIMode__1yX7P\",\"printArea\":\"AppDark_printArea__13OtO\",\"addContentImage\":\"AppDark_addContentImage__1H2zm\",\"lists\":\"AppDark_lists__28M2-\",\"list\":\"AppDark_list__KzX-8\",\"formWrapper\":\"AppDark_formWrapper__3fevE\",\"pageBreak\":\"AppDark_pageBreak__1N2RK\",\"form\":\"AppDark_form__2WncT\",\"input\":\"AppDark_input__2ZDIl\",\"buttonGenerate\":\"AppDark_buttonGenerate__WATpM\",\"buttonClear\":\"AppDark_buttonClear__1pKQs\",\"buttonPrint\":\"AppDark_buttonPrint__2d4CN\",\"printAreaWrapper\":\"AppDark_printAreaWrapper__1pyPp\",\"pTag\":\"AppDark_pTag__368Ll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1lLUQ\",\"toggleUIMode\":\"App_toggleUIMode__1q_qc\",\"printArea\":\"App_printArea__1WmYN\",\"addContentImage\":\"App_addContentImage__27i94\",\"lists\":\"App_lists__2Zwns\",\"list\":\"App_list__1Gqp4\",\"formWrapper\":\"App_formWrapper__1H02N\",\"pageBreak\":\"App_pageBreak__3ZFSh\",\"form\":\"App_form__2fgzf\",\"input\":\"App_input__3jN2X\",\"buttonGenerate\":\"App_buttonGenerate__2Nqaz\",\"buttonClear\":\"App_buttonClear__16IHo\",\"buttonPrint\":\"App_buttonPrint__3xQg8\",\"printAreaWrapper\":\"App_printAreaWrapper__2UPEa\",\"pTag\":\"App_pTag__8zp81\"};","module.exports = __webpack_public_path__ + \"static/media/add-content.c593a7f4.svg\";","import React, { useState, createContext } from \"react\";\r\n\r\nexport const LabelContext = createContext();\r\n\r\nconst LabelContextProvider = props => {\r\n  const [users, setUsers] = useState([]);\r\n  const [user, setUser] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [count, setCount] = useState(0);\r\n  const [currentCount, setCurrentCount] = useState(0);\r\n\r\n  const handleGenerate = e => {\r\n    e.preventDefault();\r\n    const usernames = [];\r\n\r\n    for (let i = 1; i <= 16; i++) {\r\n      if (i <= count) {\r\n        if (i < 10) {\r\n          usernames.push({\r\n            id: i,\r\n            username: `${user}0${i}`,\r\n            password: `${pass}0${i}`,\r\n            enableEditUsername: false,\r\n            enableEditPassword: false\r\n          });\r\n        } else {\r\n          usernames.push({\r\n            id: i,\r\n            username: `${user}${i}`,\r\n            password: `${pass}${i}`,\r\n            enableEditUsername: false,\r\n            enableEditPassword: false\r\n          });\r\n        }\r\n      } else {\r\n        usernames.push(\"\");\r\n      }\r\n    }\r\n    setUsers(usernames);\r\n    setCurrentCount(count);\r\n  };\r\n\r\n  const handleClear = e => {\r\n    e.preventDefault();\r\n    setUsers([]);\r\n  };\r\n\r\n  const handleEditUsername = id => {\r\n    const userForEdit = [...users];\r\n    const usernameForEdit = userForEdit.find(obj => obj.id === id);\r\n\r\n    usernameForEdit.enableEditUsername = true;\r\n\r\n    setUsers(userForEdit);\r\n  };\r\n\r\n  const handleUsernameChange = (e, id) => {\r\n    const userForEdit = [...users];\r\n    const usernameForEdit = userForEdit.find(obj => obj.id === id);\r\n\r\n    usernameForEdit.username = e.target.value;\r\n    setUsers(userForEdit);\r\n  };\r\n\r\n  const handleSaveUsername = id => {\r\n    const userForEdit = [...users];\r\n    const usernameForEdit = userForEdit.find(obj => obj.id === id);\r\n\r\n    usernameForEdit.enableEditUsername = false;\r\n    setUsers(userForEdit);\r\n  };\r\n\r\n  const handleEditPassword = id => {\r\n    const userForEdit = [...users];\r\n    const usernameForEdit = userForEdit.find(obj => obj.id === id);\r\n\r\n    usernameForEdit.enableEditPassword = true;\r\n    setUsers(userForEdit);\r\n  };\r\n\r\n  const handlePasswordChange = (e, id) => {\r\n    const userForEdit = [...users];\r\n    const usernameForEdit = userForEdit.find(obj => obj.id === id);\r\n\r\n    usernameForEdit.password = e.target.value;\r\n    setUsers(userForEdit);\r\n  };\r\n\r\n  const handleSavePassword = id => {\r\n    const userForEdit = [...users];\r\n    const usernameForEdit = userForEdit.find(obj => obj.id === id);\r\n\r\n    usernameForEdit.enableEditPassword = false;\r\n    setUsers(userForEdit);\r\n  };\r\n\r\n  return (\r\n    <LabelContext.Provider\r\n      value={{\r\n        user,\r\n        setUser,\r\n        users,\r\n        setUsers,\r\n        pass,\r\n        setPass,\r\n        count,\r\n        setCount,\r\n        handleClear,\r\n        handleEditPassword,\r\n        handleEditUsername,\r\n        handleGenerate,\r\n        handlePasswordChange,\r\n        handleSavePassword,\r\n        handleUsernameChange,\r\n        handleSaveUsername,\r\n        currentCount\r\n      }}\r\n    >\r\n      {props.children}\r\n    </LabelContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LabelContextProvider;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\nimport darkStyles from \"../AppDark.module.css\";\r\nimport lightStyles from \"../App.module.css\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst ThemeContextProvider = props => {\r\n  const [isDarkMode, setIsDarkMode] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem(\"isDarkMode\")) === null) {\r\n      localStorage.setItem(\"isDarkMode\", true);\r\n    }\r\n    const UIFromLS = JSON.parse(localStorage.getItem(\"isDarkMode\"));\r\n    setIsDarkMode(UIFromLS);\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{ isDarkMode, setIsDarkMode, darkStyles, lightStyles }}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport { ThemeContext } from \"../context/ThemeContext\";\r\nimport { LabelContext } from \"../context/LabelContext\";\r\n\r\nconst LabelSticker = props => {\r\n  const {\r\n    users,\r\n    currentCount,\r\n    handleEditPassword,\r\n    handleEditUsername,\r\n    handlePasswordChange,\r\n    handleSavePassword,\r\n    handleSaveUsername,\r\n    handleUsernameChange\r\n  } = useContext(LabelContext);\r\n\r\n  const { lightStyles, darkStyles, isDarkMode } = useContext(ThemeContext);\r\n\r\n  const listItems = users.map((a, i) => (\r\n    <li\r\n      key={a.id}\r\n      className={isDarkMode ? darkStyles.list : lightStyles.list}\r\n      onContextMenu={() => console.log(\"right clicked\")}\r\n    >\r\n      {i < currentCount ? `user: ` : null}\r\n      {a.enableEditUsername ? (\r\n        <input\r\n          name={a.id}\r\n          type='text'\r\n          value={a.username}\r\n          style={{\r\n            borderBottom: \"1px solid #cccccc\",\r\n            width: \"50%\",\r\n            height: \"15px\",\r\n            display: \"inline-block\",\r\n            margin: 0,\r\n            padding: 0,\r\n            textAlign: \"center\"\r\n          }}\r\n          onChange={e => handleUsernameChange(e, a.id)}\r\n          onBlur={() => handleSaveUsername(a.id)}\r\n          maxLength='20'\r\n          autoFocus\r\n        />\r\n      ) : (\r\n        <span\r\n          style={{ cursor: \"pointer\" }}\r\n          onDoubleClick={() => handleEditUsername(a.id)}\r\n        >\r\n          {a.username}\r\n        </span>\r\n      )}\r\n      <br />\r\n      {i < currentCount ? `pass: ` : null}\r\n      {a.enableEditPassword ? (\r\n        <input\r\n          name={a.id}\r\n          type='text'\r\n          value={a.password}\r\n          style={{\r\n            borderBottom: \"1px solid #cccccc\",\r\n            width: \"50%\",\r\n            height: \"15px\",\r\n            display: \"inline-block\",\r\n            margin: 0,\r\n            padding: 0,\r\n            textAlign: \"center\"\r\n          }}\r\n          onChange={e => handlePasswordChange(e, a.id)}\r\n          onBlur={() => handleSavePassword(a.id)}\r\n          maxLength='20'\r\n          autoFocus\r\n        />\r\n      ) : (\r\n        <span\r\n          style={{ cursor: \"pointer\" }}\r\n          onDoubleClick={() => handleEditPassword(a.id)}\r\n        >\r\n          {a.password}\r\n        </span>\r\n      )}\r\n    </li>\r\n  ));\r\n  return <React.Fragment>{listItems}</React.Fragment>;\r\n};\r\n\r\nexport default LabelSticker;\r\n","import React, { useContext, useRef } from \"react\";\r\nimport LabelSticker from \"./LabelSticker\";\r\nimport { LabelContext } from \"../context/LabelContext\";\r\nimport addContent from \"../add-content.svg\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport { ThemeContext } from \"../context/ThemeContext\";\r\n\r\nconst LabelStickers = props => {\r\n  const { users } = useContext(LabelContext);\r\n  const { isDarkMode, darkStyles, lightStyles } = useContext(ThemeContext);\r\n  const componentRef = useRef();\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        isDarkMode ? darkStyles.printAreaWrapper : lightStyles.printAreaWrapper\r\n      }\r\n    >\r\n      <div\r\n        className={isDarkMode ? darkStyles.printArea : lightStyles.printArea}\r\n        ref={componentRef}\r\n      >\r\n        {users.length === 0 ? (\r\n          <React.Fragment>\r\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n              <img\r\n                style={{\r\n                  width: \"50%\",\r\n                  margin: \"20px\",\r\n                  alignSelf: \"center\"\r\n                }}\r\n                src={addContent}\r\n                alt='add'\r\n              />\r\n              <div>\r\n                <p className={isDarkMode ? darkStyles.pTag : lightStyles.pTag}>\r\n                  Get Started.\r\n                </p>\r\n                <p style={{ color: \"grey\", fontSize: \"15px\" }}>\r\n                  Please fill in the fields on the left to start generating\r\n                  username and password.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        ) : (\r\n          <ul className={isDarkMode ? darkStyles.lists : lightStyles.lists}>\r\n            <LabelSticker />\r\n          </ul>\r\n        )}\r\n      </div>\r\n\r\n      <ReactToPrint\r\n        trigger={() => (\r\n          <button\r\n            disabled={users.length === 0}\r\n            className={\r\n              isDarkMode ? darkStyles.buttonPrint : lightStyles.buttonPrint\r\n            }\r\n            style={{\r\n              width: \"100vw\",\r\n              position: \"absolute\",\r\n              visibility: users.length === 0 ? \"hidden\" : \"visible\",\r\n              opacity: users.length === 0 ? \"0\" : \"1\",\r\n              top: \"calc(100% - 78px)\",\r\n              transition: \"all 300ms ease-in-out\"\r\n            }}\r\n          >\r\n            Print\r\n          </button>\r\n        )}\r\n        content={() => componentRef.current}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LabelStickers;\r\n","import React, { useContext } from \"react\";\r\nimport { LabelContext } from \"../context/LabelContext\";\r\nimport { ThemeContext } from \"../context/ThemeContext\";\r\nimport LabelContextProvider from \"../context/LabelContext\";\r\n\r\nconst StickerForm = props => {\r\n  const {\r\n    setUser,\r\n    setPass,\r\n    setCount,\r\n    handleClear,\r\n    handleGenerate\r\n  } = useContext(LabelContext);\r\n  const { darkStyles, lightStyles, isDarkMode } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <LabelContextProvider>\r\n      <form\r\n        className={isDarkMode ? darkStyles.form : lightStyles.form}\r\n        autoComplete='off'\r\n        onSubmit={handleGenerate}\r\n      >\r\n        <input\r\n          className={isDarkMode ? darkStyles.input : lightStyles.input}\r\n          required\r\n          type='text'\r\n          name='user'\r\n          placeholder='Username'\r\n          onChange={e => setUser(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          className={isDarkMode ? darkStyles.input : lightStyles.input}\r\n          required\r\n          type='text'\r\n          name='pass'\r\n          placeholder='Password'\r\n          onChange={e => setPass(e.target.value)}\r\n        />\r\n        <br />\r\n\r\n        <input\r\n          className={isDarkMode ? darkStyles.input : lightStyles.input}\r\n          required\r\n          type='number'\r\n          min='1'\r\n          max='16'\r\n          name='count'\r\n          placeholder='How many?'\r\n          onChange={e => setCount(e.target.value)}\r\n        />\r\n        <br />\r\n        <input\r\n          type='submit'\r\n          className={\r\n            isDarkMode ? darkStyles.buttonGenerate : lightStyles.buttonGenerate\r\n          }\r\n          value='Generate'\r\n        />\r\n        <button\r\n          className={\r\n            isDarkMode ? darkStyles.buttonClear : lightStyles.buttonClear\r\n          }\r\n          onClick={handleClear}\r\n        >\r\n          Clear\r\n        </button>\r\n      </form>\r\n    </LabelContextProvider>\r\n  );\r\n};\r\n\r\nexport default StickerForm;\r\n","import React, { useContext } from \"react\";\r\nimport LabelContextProvider from \"./context/LabelContext\";\r\nimport { ThemeContext } from \"./context/ThemeContext\";\r\nimport LabelStickers from \"./components/LabelStickers\";\r\n\r\nimport StickerForm from \"./components/StickerForm\";\r\n\r\nfunction App() {\r\n  const { isDarkMode, setIsDarkMode, darkStyles, lightStyles } = useContext(\r\n    ThemeContext\r\n  );\r\n  return (\r\n    <LabelContextProvider>\r\n      <div className={isDarkMode ? darkStyles.App : lightStyles.App}>\r\n        <div\r\n          className={\r\n            isDarkMode ? darkStyles.formWrapper : lightStyles.formWrapper\r\n          }\r\n        >\r\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n            <h1>Label Sticker</h1>\r\n            <input\r\n              type='checkbox'\r\n              onClick={() => {\r\n                const currentUIFromLS = JSON.parse(\r\n                  localStorage.getItem(\"isDarkMode\")\r\n                );\r\n\r\n                localStorage.setItem(\"isDarkMode\", !currentUIFromLS);\r\n                setIsDarkMode(!currentUIFromLS);\r\n              }}\r\n              style={{ margin: \"10px 0\", display: \"none\" }}\r\n              id='toggleDarkMode'\r\n            />\r\n            <label\r\n              htmlFor='toggleDarkMode'\r\n              className={\r\n                isDarkMode ? darkStyles.toggleUIMode : lightStyles.toggleUIMode\r\n              }\r\n            >\r\n              {isDarkMode ? \"Light\" : \"Dark\"}\r\n            </label>\r\n          </div>\r\n\r\n          <StickerForm />\r\n          <p\r\n            style={{\r\n              color: \"grey\",\r\n              marginTop: \"50px\",\r\n              fontSize: \"15px\"\r\n            }}\r\n          >\r\n            This app only supports 8 rows and 2 columns label stickers.\r\n          </p>\r\n        </div>\r\n        <LabelStickers />\r\n      </div>\r\n    </LabelContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport ThemeContextProvider from \"./context/ThemeContext\";\r\n// import \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <ThemeContextProvider>\r\n    <App />\r\n  </ThemeContextProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}